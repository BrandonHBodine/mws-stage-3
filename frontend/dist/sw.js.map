{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/idb/lib/idb.js","webpack:///./sw.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","apply","then","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","arr","Array","slice","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","exp","open","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","default","contentImgsCache","mapCache","allCaches","filesArr","dbPromise","a","upgradeDB","idbRestaurants","tx","put","clear","keys","iterateKeyCursor","getReviews","setReviews","setUnsentReview","getUnsentReviews","deleteUnsentReview","getRestaurantID","requestUrl","search","match","c1","c2","c3","self","addEventListener","console","log","waitUntil","caches","cache","addAll","catch","err","cacheNames","all","filter","cacheName","startsWith","includes","map","URL","url","origin","location","pathname","respondWith","storageUrl","response","fetch","networkResponse","clone","servePhoto","requestMap","mapResponse","networkResponseMap","requestJSON","restaurantID","res","ok","indexValue","json","Response","JSON","stringify","getRestaurantReviews","postRequest","params","searchParams","requestName","requestRating","requestComments","requestID","requestHref","href","requestHost","host","reviewContents","swResponse","status","statusText","postRestaurantReviews","reviewsArray","reviewsPromiseArray","curReview","reviewRequest","Request","values"],"mappings":"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","file":"sw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","import idb from 'idb';\n\nconst staticCacheName = 'restaurant-reviews-v1';\nconst contentImgsCache = 'restaurant-images-v1';\nconst mapCache = 'restaurant-map-v1';\nconst allCaches = [staticCacheName, contentImgsCache, mapCache];\nconst filesArr = [\n\t'/index.html',\n\t'/restaurant.html',\n\t'/restaurant.bundle.js',\n\t'/main.bundle.js'\n];\n\nvar dbPromise = idb.open('restaurant-reviews', 1, function(upgradeDB) {\n\tupgradeDB.createObjectStore('restaurants');\n\tupgradeDB.createObjectStore('reviews');\n\tupgradeDB.createObjectStore('unsent-reviews');\n});\n\nconst idbRestaurants = {\n\tget(key) {\n\t\treturn dbPromise.then(db => {\n\t\t\treturn db\n\t\t\t\t.transaction('restaurants')\n\t\t\t\t.objectStore('restaurants')\n\t\t\t\t.get(key);\n\t\t});\n\t},\n\tset(key, val) {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('restaurants', 'readwrite');\n\t\t\ttx.objectStore('restaurants').put(val, key);\n\t\t\treturn tx.complete;\n\t\t});\n\t},\n\tdelete(key) {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('restaurants', 'readwrite');\n\t\t\ttx.objectStore('restaurants').delete(key);\n\t\t\treturn tx.complete;\n\t\t});\n\t},\n\tclear() {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('restaurants', 'readwrite');\n\t\t\ttx.objectStore('restaurants').clear();\n\t\t\treturn tx.complete;\n\t\t});\n\t},\n\tkeys() {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('restaurants');\n\t\t\tconst keys = [];\n\t\t\tconst store = tx.objectStore('restaurants');\n\n\t\t\t// This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n\t\t\t// openKeyCursor isn't supported by Safari, so we fall back\n\t\t\t(store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n\t\t\t\tif (!cursor) return;\n\t\t\t\tkeys.push(cursor.key);\n\t\t\t\tcursor.continue();\n\t\t\t});\n\n\t\t\treturn tx.complete.then(() => keys);\n\t\t});\n\t},\n\n\tgetReviews(key) {\n\t\treturn dbPromise.then(db => {\n\t\t\treturn db\n\t\t\t\t.transaction('reviews')\n\t\t\t\t.objectStore('reviews')\n\t\t\t\t.get(key);\n\t\t});\n\t},\n\n\tsetReviews(key, val) {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('reviews', 'readwrite');\n\t\t\ttx.objectStore('reviews').put(val, key);\n\t\t\treturn tx.complete;\n\t\t});\n\t},\n\n\tsetUnsentReview(key, val) {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('unsent-reviews', 'readwrite');\n\t\t\ttx.objectStore('unsent-reviews').put(val, key);\n\t\t\treturn tx.complete;\n\t\t});\n\t},\n\tgetUnsentReviews() {\n\t\treturn dbPromise.then(db => {\n\t\t\treturn db\n\t\t\t\t.transaction('unsent-reviews', 'readwrite')\n\t\t\t\t.objectStore('unsent-reviews')\n\t\t\t\t.getAll();\n\t\t});\n\t},\n\tdeleteUnsentReview(key) {\n\t\treturn dbPromise.then(db => {\n\t\t\tconst tx = db.transaction('unsent-reviews', 'readwrite');\n\t\t\ttx.objectStore('unsent-reviews').delete(key);\n\t\t\treturn tx.complete;\n\t\t});\n\t}\n};\n\nself.addEventListener('install', function(event) {\n\tconsole.log('ServiceWorker installed');\n\tevent.waitUntil(\n\t\tcaches\n\t\t\t.open(staticCacheName)\n\t\t\t.then(function(cache) {\n\t\t\t\treturn cache.addAll(filesArr);\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tconsole.log('Error has occured: ', err);\n\t\t\t})\n\t);\n});\n\nself.addEventListener('activate', function(event) {\n\tevent.waitUntil(\n\t\tcaches.keys().then(function(cacheNames) {\n\t\t\treturn Promise.all(\n\t\t\t\tcacheNames\n\t\t\t\t\t.filter(function(cacheName) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tcacheName.startsWith('restaurant-') &&\n\t\t\t\t\t\t\t!allCaches.includes(cacheName)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map(function(cacheName) {\n\t\t\t\t\t\treturn caches.delete(cacheName);\n\t\t\t\t\t})\n\t\t\t);\n\t\t})\n\t);\n});\n\nself.addEventListener('fetch', function(event) {\n\tlet requestUrl = new URL(event.request.url);\n\t// Check for requests made to app and are special cases\n\tif (requestUrl.origin === location.origin) {\n\t\tif (requestUrl.pathname === '/') {\n\t\t\tconsole.log('Serving cached index page');\n\t\t\tevent.respondWith(caches.match('/index.html'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (requestUrl.pathname === '/restaurant.html') {\n\t\t\t// URL params stay intact\n\t\t\tconsole.log('Serving restraunt page');\n\t\t\tevent.respondWith(caches.match('/restaurant.html'));\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for images to serve\n\t\tif (requestUrl.pathname.startsWith('/img/')) {\n\t\t\tconsole.log('Image requested, checking cache');\n\t\t\tevent.respondWith(servePhoto(event.request));\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for map\n\t\tif (requestUrl.pathname.startsWith('/maps/api/js')) {\n\t\t\tconsole.log('Map requested, checking cache');\n\t\t\tevent.respondWith(serveMap(event.request));\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Resturants JSON\n\tif (requestUrl.pathname === '/restaurants') {\n\t\tevent.respondWith(serveRestaurantsJSON(event.request));\n\t\treturn;\n\t}\n\n\t// Check for reviews request\n\tif (requestUrl.pathname.startsWith('/reviews')) {\n\t\t// May need to ensure ?restaurant_id= is in the request\n\n\t\tif (event.request.method === 'GET') {\n\t\t\tevent.respondWith(getRestaurantReviews(requestUrl));\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.request.method === 'POST') {\n\t\t\tconsole.log('review method', event.request.method);\n\t\t\tevent.respondWith(postRestaurantReviews(requestUrl, event.request));\n\t\t\treturn;\n\t\t}\n\n\t\tevent.respondWith(fetch(requestUrl));\n\t\treturn;\n\t}\n\n\t// check for unsent reviews\n\tif (requestUrl.pathname.startsWith('/unsent')) {\n\t\tif (event.request.method === 'POST') {\n\t\t\treturn event.respondWith(sendUnsentReviews());\n\t\t}\n\t}\n\n\t// Catch all cache external responses\n\tevent.respondWith(\n\t\tcaches.match(event.request).then(function(response) {\n\t\t\treturn response || fetch(event.request);\n\t\t})\n\t);\n});\n\nfunction servePhoto(request) {\n\t// Update to user friendly name\n\tconst storageUrl = request.url.replace(/-\\d+px\\.jpg$/, '');\n\n\t// Add image to cache and serve image if in cache\n\treturn caches.open(contentImgsCache).then(function(cache) {\n\t\treturn cache.match(storageUrl).then(function(response) {\n\t\t\tif (response) return response;\n\n\t\t\treturn fetch(request).then(function(networkResponse) {\n\t\t\t\tcache.put(storageUrl, networkResponse.clone());\n\t\t\t\treturn networkResponse;\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction serveMap(requestMap) {\n\t// I wonder what it's response type is?\n\tconst mapName = 'map';\n\n\treturn caches.open(mapCache).then(function(cache) {\n\t\treturn cache.match(mapName).then(function(mapResponse) {\n\t\t\t// If there is a map in the cache respond with it\n\t\t\tif (mapResponse) return mapResponse;\n\n\t\t\t// Get map then cache and serve it\n\t\t\treturn fetch(requestMap, { mode: 'no-cors' }).then(function(\n\t\t\t\tnetworkResponseMap\n\t\t\t) {\n\t\t\t\tcache.put(mapName, networkResponseMap.clone());\n\t\t\t\treturn networkResponseMap;\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction serveRestaurantsJSON(requestJSON) {\n\treturn fetch(requestJSON)\n\t\t.then(function(res) {\n\t\t\tif (res.ok) {\n\t\t\t\tlet indexValue = res.clone();\n\t\t\t\t// Put JSON in indexedDB\n\t\t\t\tindexValue.json().then(function(json) {\n\t\t\t\t\tidbRestaurants.set('restaurants-json', json);\n\t\t\t\t});\n\t\t\t\treturn res;\n\t\t\t}\n\t\t})\n\t\t.catch(function(err) {\n\t\t\t// When fetch fails try and serve non cached assests\n\t\t\treturn idbRestaurants.get('restaurants-json').then(function(val) {\n\t\t\t\tif (val) {\n\t\t\t\t\tconsole.log('IndexDB JSON Found');\n\t\t\t\t\treturn new Response(JSON.stringify(val));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n}\n\nfunction getRestaurantReviews(requestUrl) {\n\t// This function is for GET requests so we can quickly retrive the meesages\n\tlet restaurantID = getRestaurantID(requestUrl);\n\n\t// Try request first then fallback to\n\treturn fetch(requestUrl)\n\t\t.then(function(res) {\n\t\t\tconsole.log(res);\n\t\t\tif (res.ok) {\n\t\t\t\tlet indexValue = res.clone();\n\t\t\t\t// Put JSON in indexedDB\n\t\t\t\treturn indexValue.json().then(function(json) {\n\t\t\t\t\tidbRestaurants.setReviews(restaurantID, json);\n\t\t\t\t\treturn res;\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(function(err) {\n\t\t\t// Try and get the reviews from IDB\n\t\t\treturn idbRestaurants.getReviews(restaurantID).then(function(val) {\n\t\t\t\tif (val) {\n\t\t\t\t\tconsole.log('IndexDB JSON Found');\n\t\t\t\t\treturn new Response(JSON.stringify(val));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n}\n\nfunction postRestaurantReviews(requestUrl, postRequest) {\n\t// This function is for POST requests so we can make sure we can post the message if avaliable\n\t// ?restaurant_id=6&name=abobknd%20a&rating=5&comments=ldnaklndaknd\"\n\tlet restaurantID = getRestaurantID(requestUrl);\n\tconsole.log(requestUrl);\n\t// Get url Params\n\tlet params = requestUrl.searchParams;\n\tlet requestName = params.get('name');\n\tlet requestRating = params.get('rating');\n\tlet requestComments = params.get('comments');\n\tlet requestID = params.get('restaurant_id');\n\tlet requestHref = requestUrl.href;\n\tlet requestHost = requestUrl.host;\n\treturn fetch(requestUrl)\n\t\t.then(function(res) {\n\t\t\tconsole.log('Post made it to server');\n\t\t\treturn res;\n\t\t})\n\t\t.catch(function() {\n\t\t\t// If not store to be uploaded later\n\t\t\tconsole.log('Saving review to IDB');\n\t\t\tlet reviewContents = {\n\t\t\t\trequestName,\n\t\t\t\trequestRating,\n\t\t\t\trequestComments,\n\t\t\t\trequestID,\n\t\t\t\trequestHref,\n\t\t\t\trequestHost\n\t\t\t};\n\t\t\treturn idbRestaurants\n\t\t\t\t.setUnsentReview(requestName, reviewContents)\n\t\t\t\t.then(function() {\n\t\t\t\t\tlet init = {\n\t\t\t\t\t\tstatus: 200,\n\t\t\t\t\t\tstatusText: \"Couldn't make it to server saving for later\"\n\t\t\t\t\t};\n\t\t\t\t\tlet swResponse = new Response({}, init);\n\t\t\t\t\treturn swResponse;\n\t\t\t\t});\n\t\t});\n}\n\nfunction getRestaurantID(requestUrl) {\n\t// Get the restaurant id from the url\n\tlet reg = /(\\?restaurant_id=)([0-9]+)(.*)/;\n\treturn requestUrl.search.replace(reg, function(match, c1, c2, c3) {\n\t\treturn c2;\n\t});\n}\n\nfunction sendUnsentReviews() {\n\tconsole.log('Unsent Function sending reviews');\n\treturn idbRestaurants.getUnsentReviews().then(function(reviewsArray) {\n\t\tlet reviewsPromiseArray = reviewsArray.map(function(curReview) {\n\t\t\tlet url = `http://${curReview.requestHost}\n\t\t\t\t/reviews/?restaurant_id=${curReview.requestID}&name=${\n\t\t\t\tcurReview.requestName\n\t\t\t}&rating=${curReview.requestRating}&comments=${\n\t\t\t\tcurReview.requestComments\n\t\t\t}`;\n\t\t\tlet data = {\n\t\t\t\tmethod: 'POST'\n\t\t\t};\n\t\t\t// Send requests\n\t\t\tlet reviewRequest = new Request(url, data);\n\t\t\tconsole.log(reviewRequest);\n\t\t\tfetch(reviewRequest).then(function(res) {\n\t\t\t\tconsole.log('fetch res', res);\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn idbRestaurants.deleteUnsentReview(curReview.requestName);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(reviewsPromiseArray)\n\t\t\t.then(function(values) {\n\t\t\t\treturn new Response(null, { status: 200, statusText: 'Uploading' });\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tconsole.log('Failed to upload unsent reviews', err);\n\t\t\t\treturn new Response(null, {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\tstatusText: 'Failed to upload'\n\t\t\t\t});\n\t\t\t});\n\t});\n}\n"],"sourceRoot":""}